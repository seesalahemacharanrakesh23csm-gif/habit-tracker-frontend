{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHARAN\\\\OneDrive\\\\Desktop\\\\habit-tracker\\\\frontend\\\\src\\\\components\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  token\n}) => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState(\"\");\n\n  // Fetch user's habits\n  useEffect(() => {\n    const fetchHabits = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/habits\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        setHabits(data);\n      } catch (err) {\n        console.error(\"Error fetching habits:\", err);\n      }\n    };\n    fetchHabits();\n  }, [token]);\n\n  // Add a new habit\n  const addHabit = async () => {\n    if (!newHabit.trim()) return;\n    try {\n      const res = await fetch(\"http://localhost:5000/api/habits\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name: newHabit\n        })\n      });\n      const data = await res.json();\n      setHabits([...habits, data]);\n      setNewHabit(\"\");\n    } catch (err) {\n      console.error(\"Failed to add habit:\", err);\n    }\n  };\n\n  // Toggle habit completion\n  const toggleHabit = async id => {\n    try {\n      const updatedHabits = habits.map(habit => habit._id === id ? {\n        ...habit,\n        completed: !habit.completed\n      } : habit);\n      setHabits(updatedHabits);\n      await fetch(`http://localhost:5000/api/habits/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          completed: updatedHabits.find(h => h._id === id).completed\n        })\n      });\n    } catch (err) {\n      console.error(\"Failed to update habit:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Habit Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Habit\",\n        value: newHabit,\n        onChange: e => setNewHabit(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addHabit,\n        style: styles.addButton,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.habitList,\n      children: habits.map(habit => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.habitItem,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => toggleHabit(habit._id),\n          style: {\n            ...styles.habitName,\n            textDecoration: habit.completed ? \"line-through\" : \"none\",\n            color: habit.completed ? \"#999\" : \"#000\"\n          },\n          children: habit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: habit.completed,\n          onChange: () => toggleHabit(habit._id),\n          style: styles.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, habit._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Inline CSS\n_s(MainPage, \"kkTGB+Qjhpq6A9sn7y0ZFevazwI=\");\n_c = MainPage;\nconst styles = {\n  container: {\n    maxWidth: \"500px\",\n    margin: \"40px auto\",\n    padding: \"20px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\n    backgroundColor: \"#fdfdfd\",\n    fontFamily: \"Arial, sans-serif\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n    color: \"#333\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    marginBottom: \"20px\"\n  },\n  input: {\n    flex: 1,\n    padding: \"10px\",\n    borderRadius: \"5px 0 0 5px\",\n    border: \"1px solid #ccc\",\n    fontSize: \"16px\"\n  },\n  addButton: {\n    padding: \"10px 20px\",\n    borderRadius: \"0 5px 5px 0\",\n    border: \"none\",\n    backgroundColor: \"#28a745\",\n    color: \"#fff\",\n    fontSize: \"16px\",\n    cursor: \"pointer\"\n  },\n  habitList: {\n    listStyleType: \"none\",\n    padding: 0\n  },\n  habitItem: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"10px\",\n    borderBottom: \"1px solid #eee\",\n    fontSize: \"18px\"\n  },\n  habitName: {\n    cursor: \"pointer\"\n  },\n  checkbox: {\n    width: \"20px\",\n    height: \"20px\"\n  }\n};\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainPage","token","_s","habits","setHabits","newHabit","setNewHabit","fetchHabits","res","fetch","headers","Authorization","data","json","err","console","error","addHabit","trim","method","body","JSON","stringify","name","toggleHabit","id","updatedHabits","map","habit","_id","completed","find","h","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","type","placeholder","value","onChange","e","target","input","onClick","addButton","habitList","habitItem","habitName","textDecoration","color","checked","checkbox","_c","maxWidth","margin","padding","borderRadius","boxShadow","backgroundColor","fontFamily","textAlign","marginBottom","display","flex","border","fontSize","cursor","listStyleType","justifyContent","alignItems","borderBottom","width","height","$RefreshReg$"],"sources":["C:/Users/CHARAN/OneDrive/Desktop/habit-tracker/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst MainPage = ({ token }) => {\r\n  const [habits, setHabits] = useState([]);\r\n  const [newHabit, setNewHabit] = useState(\"\");\r\n\r\n  // Fetch user's habits\r\n  useEffect(() => {\r\n    const fetchHabits = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/habits\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = await res.json();\r\n        setHabits(data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching habits:\", err);\r\n      }\r\n    };\r\n    fetchHabits();\r\n  }, [token]);\r\n\r\n  // Add a new habit\r\n  const addHabit = async () => {\r\n    if (!newHabit.trim()) return;\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/habits\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ name: newHabit }),\r\n      });\r\n      const data = await res.json();\r\n      setHabits([...habits, data]);\r\n      setNewHabit(\"\");\r\n    } catch (err) {\r\n      console.error(\"Failed to add habit:\", err);\r\n    }\r\n  };\r\n\r\n  // Toggle habit completion\r\n  const toggleHabit = async (id) => {\r\n    try {\r\n      const updatedHabits = habits.map((habit) =>\r\n        habit._id === id ? { ...habit, completed: !habit.completed } : habit\r\n      );\r\n      setHabits(updatedHabits);\r\n\r\n      await fetch(`http://localhost:5000/api/habits/${id}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ completed: updatedHabits.find(h => h._id === id).completed }),\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Failed to update habit:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.title}>Habit Tracker</h1>\r\n\r\n      <div style={styles.inputContainer}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"New Habit\"\r\n          value={newHabit}\r\n          onChange={(e) => setNewHabit(e.target.value)}\r\n          style={styles.input}\r\n        />\r\n        <button onClick={addHabit} style={styles.addButton}>Add</button>\r\n      </div>\r\n\r\n      <ul style={styles.habitList}>\r\n        {habits.map((habit) => (\r\n          <li key={habit._id} style={styles.habitItem}>\r\n            <span\r\n              onClick={() => toggleHabit(habit._id)}\r\n              style={{\r\n                ...styles.habitName,\r\n                textDecoration: habit.completed ? \"line-through\" : \"none\",\r\n                color: habit.completed ? \"#999\" : \"#000\",\r\n              }}\r\n            >\r\n              {habit.name}\r\n            </span>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={habit.completed}\r\n              onChange={() => toggleHabit(habit._id)}\r\n              style={styles.checkbox}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline CSS\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"500px\",\r\n    margin: \"40px auto\",\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n    backgroundColor: \"#fdfdfd\",\r\n    fontFamily: \"Arial, sans-serif\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"20px\",\r\n    color: \"#333\",\r\n  },\r\n  inputContainer: {\r\n    display: \"flex\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: \"10px\",\r\n    borderRadius: \"5px 0 0 5px\",\r\n    border: \"1px solid #ccc\",\r\n    fontSize: \"16px\",\r\n  },\r\n  addButton: {\r\n    padding: \"10px 20px\",\r\n    borderRadius: \"0 5px 5px 0\",\r\n    border: \"none\",\r\n    backgroundColor: \"#28a745\",\r\n    color: \"#fff\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  habitList: {\r\n    listStyleType: \"none\",\r\n    padding: 0,\r\n  },\r\n  habitItem: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    borderBottom: \"1px solid #eee\",\r\n    fontSize: \"18px\",\r\n  },\r\n  habitName: {\r\n    cursor: \"pointer\",\r\n  },\r\n  checkbox: {\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n  },\r\n};\r\n\r\nexport default MainPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}